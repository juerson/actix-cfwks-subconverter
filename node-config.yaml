# 使用 CF Worker 搭建的 trojan节点(WS)，不是TLS加密，v2ray能使用，clash不能使用
# 这个节点看成 userid=1
- type: trojan
  name: ""
  server: ""
  port: 8080 # 可以修改这里，作为默认端口
  password: ed27acfc-7261-4e3d-ae5f-a48b89412b2a # 修改这里
  network: ws
  ws-opts:
    path: /
    headers:
      Host: 您的子域.workers.dev # 修改这里
# 使用 CF Worker/Pages 搭建的 trojan节点(TLS+WS)，v2ray能使用，clash能使用（不过clash中使用，PROXYIP会丢失）
# 这个节点看成 userid=2
- type: trojan
  name: ""
  server: ""
  port: 8443 # 可以修改这里，作为默认端口
  password: ed27acfc-7261-4e3d-ae5f-a48b89412b2a # 修改这里
  network: ws
  udp: false
  sni: 您的域名.pages.dev # 修改这里
  client-fingerprint: chrome
  skip-cert-verify: true
  ws-opts:
    path: /
    headers:
      Host: 您的域名.pages.dev # 修改这里
  alpn:
    - h3
# 使用 CF Worker 搭建的 vless 节点(WS)，不是TLS加密，这个遇到过v2ray不能使用情况，但是clash能使用
# 这个节点看成 userid=3
- type: vless
  name: ""
  server: ""
  port: 8880 # 可以修改这里，作为默认端口
  uuid: ed27acfc-7261-4e3d-ae5f-a48b89412b2a # 修改这里
  network: ws
  tls: false
  udp: false
  ws-opts:
    path: /?ed=2048
    headers:
      Host: 您的子域.workers.dev # 修改这里
# 使用 CF Worker/Pages 搭建的 vless 节点(TLS+WS)
# 这个节点看成 userid=4
- type: vless
  name: ""
  server: ""
  port: 8443 # 可以修改这里，作为默认端口
  uuid: ed27acfc-7261-4e3d-ae5f-a48b89412b2a # 修改这里
  network: ws
  tls: true
  udp: false
  servername: 您的域名.pages.dev # 修改这里
  client-fingerprint: chrome
  ws-opts:
    path: /?ed=2048
    headers:
      Host: 您的域名.pages.dev # 修改这里
  alpn:
    - h3
